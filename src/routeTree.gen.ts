/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as DisplayfilteredentriesImport } from './routes/display_filtered_entries'
import { Route as NavbarImport } from './routes/_navbar'
import { Route as IndexImport } from './routes/index'
import { Route as OnboardingWelcomeImport } from './routes/_onboarding/welcome'
import { Route as OnboardingLegacyimportImport } from './routes/_onboarding/legacy_import'
import { Route as OnboardingApiimportImport } from './routes/_onboarding/api_import'
import { Route as NavbarSettingsImport } from './routes/_navbar/settings'
import { Route as NavbarPivottableImport } from './routes/_navbar/pivottable'
import { Route as NavbarPivotDerivedPageImport } from './routes/_navbar/pivot-derived-page'
import { Route as NavbarJupyterImport } from './routes/_navbar/jupyter'
import { Route as NavbarGraphsImport } from './routes/_navbar/graphs'
import { Route as NavbarGraphologyImport } from './routes/_navbar/graphology'
import { Route as NavbarCustomfieldsImport } from './routes/_navbar/custom_fields'
import { Route as NavbarConfigureViewImport } from './routes/_navbar/configure-view'

// Create/Update Routes

const DisplayfilteredentriesRoute = DisplayfilteredentriesImport.update({
  id: '/display_filtered_entries',
  path: '/display_filtered_entries',
  getParentRoute: () => rootRoute,
} as any)

const NavbarRoute = NavbarImport.update({
  id: '/_navbar',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const OnboardingWelcomeRoute = OnboardingWelcomeImport.update({
  id: '/_onboarding/welcome',
  path: '/welcome',
  getParentRoute: () => rootRoute,
} as any)

const OnboardingLegacyimportRoute = OnboardingLegacyimportImport.update({
  id: '/_onboarding/legacy_import',
  path: '/legacy_import',
  getParentRoute: () => rootRoute,
} as any)

const OnboardingApiimportRoute = OnboardingApiimportImport.update({
  id: '/_onboarding/api_import',
  path: '/api_import',
  getParentRoute: () => rootRoute,
} as any)

const NavbarSettingsRoute = NavbarSettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => NavbarRoute,
} as any)

const NavbarPivottableRoute = NavbarPivottableImport.update({
  id: '/pivottable',
  path: '/pivottable',
  getParentRoute: () => NavbarRoute,
} as any)

const NavbarPivotDerivedPageRoute = NavbarPivotDerivedPageImport.update({
  id: '/pivot-derived-page',
  path: '/pivot-derived-page',
  getParentRoute: () => NavbarRoute,
} as any)

const NavbarJupyterRoute = NavbarJupyterImport.update({
  id: '/jupyter',
  path: '/jupyter',
  getParentRoute: () => NavbarRoute,
} as any)

const NavbarGraphsRoute = NavbarGraphsImport.update({
  id: '/graphs',
  path: '/graphs',
  getParentRoute: () => NavbarRoute,
} as any)

const NavbarGraphologyRoute = NavbarGraphologyImport.update({
  id: '/graphology',
  path: '/graphology',
  getParentRoute: () => NavbarRoute,
} as any)

const NavbarCustomfieldsRoute = NavbarCustomfieldsImport.update({
  id: '/custom_fields',
  path: '/custom_fields',
  getParentRoute: () => NavbarRoute,
} as any)

const NavbarConfigureViewRoute = NavbarConfigureViewImport.update({
  id: '/configure-view',
  path: '/configure-view',
  getParentRoute: () => NavbarRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_navbar': {
      id: '/_navbar'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof NavbarImport
      parentRoute: typeof rootRoute
    }
    '/display_filtered_entries': {
      id: '/display_filtered_entries'
      path: '/display_filtered_entries'
      fullPath: '/display_filtered_entries'
      preLoaderRoute: typeof DisplayfilteredentriesImport
      parentRoute: typeof rootRoute
    }
    '/_navbar/configure-view': {
      id: '/_navbar/configure-view'
      path: '/configure-view'
      fullPath: '/configure-view'
      preLoaderRoute: typeof NavbarConfigureViewImport
      parentRoute: typeof NavbarImport
    }
    '/_navbar/custom_fields': {
      id: '/_navbar/custom_fields'
      path: '/custom_fields'
      fullPath: '/custom_fields'
      preLoaderRoute: typeof NavbarCustomfieldsImport
      parentRoute: typeof NavbarImport
    }
    '/_navbar/graphology': {
      id: '/_navbar/graphology'
      path: '/graphology'
      fullPath: '/graphology'
      preLoaderRoute: typeof NavbarGraphologyImport
      parentRoute: typeof NavbarImport
    }
    '/_navbar/graphs': {
      id: '/_navbar/graphs'
      path: '/graphs'
      fullPath: '/graphs'
      preLoaderRoute: typeof NavbarGraphsImport
      parentRoute: typeof NavbarImport
    }
    '/_navbar/jupyter': {
      id: '/_navbar/jupyter'
      path: '/jupyter'
      fullPath: '/jupyter'
      preLoaderRoute: typeof NavbarJupyterImport
      parentRoute: typeof NavbarImport
    }
    '/_navbar/pivot-derived-page': {
      id: '/_navbar/pivot-derived-page'
      path: '/pivot-derived-page'
      fullPath: '/pivot-derived-page'
      preLoaderRoute: typeof NavbarPivotDerivedPageImport
      parentRoute: typeof NavbarImport
    }
    '/_navbar/pivottable': {
      id: '/_navbar/pivottable'
      path: '/pivottable'
      fullPath: '/pivottable'
      preLoaderRoute: typeof NavbarPivottableImport
      parentRoute: typeof NavbarImport
    }
    '/_navbar/settings': {
      id: '/_navbar/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof NavbarSettingsImport
      parentRoute: typeof NavbarImport
    }
    '/_onboarding/api_import': {
      id: '/_onboarding/api_import'
      path: '/api_import'
      fullPath: '/api_import'
      preLoaderRoute: typeof OnboardingApiimportImport
      parentRoute: typeof rootRoute
    }
    '/_onboarding/legacy_import': {
      id: '/_onboarding/legacy_import'
      path: '/legacy_import'
      fullPath: '/legacy_import'
      preLoaderRoute: typeof OnboardingLegacyimportImport
      parentRoute: typeof rootRoute
    }
    '/_onboarding/welcome': {
      id: '/_onboarding/welcome'
      path: '/welcome'
      fullPath: '/welcome'
      preLoaderRoute: typeof OnboardingWelcomeImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

interface NavbarRouteChildren {
  NavbarConfigureViewRoute: typeof NavbarConfigureViewRoute
  NavbarCustomfieldsRoute: typeof NavbarCustomfieldsRoute
  NavbarGraphologyRoute: typeof NavbarGraphologyRoute
  NavbarGraphsRoute: typeof NavbarGraphsRoute
  NavbarJupyterRoute: typeof NavbarJupyterRoute
  NavbarPivotDerivedPageRoute: typeof NavbarPivotDerivedPageRoute
  NavbarPivottableRoute: typeof NavbarPivottableRoute
  NavbarSettingsRoute: typeof NavbarSettingsRoute
}

const NavbarRouteChildren: NavbarRouteChildren = {
  NavbarConfigureViewRoute: NavbarConfigureViewRoute,
  NavbarCustomfieldsRoute: NavbarCustomfieldsRoute,
  NavbarGraphologyRoute: NavbarGraphologyRoute,
  NavbarGraphsRoute: NavbarGraphsRoute,
  NavbarJupyterRoute: NavbarJupyterRoute,
  NavbarPivotDerivedPageRoute: NavbarPivotDerivedPageRoute,
  NavbarPivottableRoute: NavbarPivottableRoute,
  NavbarSettingsRoute: NavbarSettingsRoute,
}

const NavbarRouteWithChildren =
  NavbarRoute._addFileChildren(NavbarRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof NavbarRouteWithChildren
  '/display_filtered_entries': typeof DisplayfilteredentriesRoute
  '/configure-view': typeof NavbarConfigureViewRoute
  '/custom_fields': typeof NavbarCustomfieldsRoute
  '/graphology': typeof NavbarGraphologyRoute
  '/graphs': typeof NavbarGraphsRoute
  '/jupyter': typeof NavbarJupyterRoute
  '/pivot-derived-page': typeof NavbarPivotDerivedPageRoute
  '/pivottable': typeof NavbarPivottableRoute
  '/settings': typeof NavbarSettingsRoute
  '/api_import': typeof OnboardingApiimportRoute
  '/legacy_import': typeof OnboardingLegacyimportRoute
  '/welcome': typeof OnboardingWelcomeRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof NavbarRouteWithChildren
  '/display_filtered_entries': typeof DisplayfilteredentriesRoute
  '/configure-view': typeof NavbarConfigureViewRoute
  '/custom_fields': typeof NavbarCustomfieldsRoute
  '/graphology': typeof NavbarGraphologyRoute
  '/graphs': typeof NavbarGraphsRoute
  '/jupyter': typeof NavbarJupyterRoute
  '/pivot-derived-page': typeof NavbarPivotDerivedPageRoute
  '/pivottable': typeof NavbarPivottableRoute
  '/settings': typeof NavbarSettingsRoute
  '/api_import': typeof OnboardingApiimportRoute
  '/legacy_import': typeof OnboardingLegacyimportRoute
  '/welcome': typeof OnboardingWelcomeRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_navbar': typeof NavbarRouteWithChildren
  '/display_filtered_entries': typeof DisplayfilteredentriesRoute
  '/_navbar/configure-view': typeof NavbarConfigureViewRoute
  '/_navbar/custom_fields': typeof NavbarCustomfieldsRoute
  '/_navbar/graphology': typeof NavbarGraphologyRoute
  '/_navbar/graphs': typeof NavbarGraphsRoute
  '/_navbar/jupyter': typeof NavbarJupyterRoute
  '/_navbar/pivot-derived-page': typeof NavbarPivotDerivedPageRoute
  '/_navbar/pivottable': typeof NavbarPivottableRoute
  '/_navbar/settings': typeof NavbarSettingsRoute
  '/_onboarding/api_import': typeof OnboardingApiimportRoute
  '/_onboarding/legacy_import': typeof OnboardingLegacyimportRoute
  '/_onboarding/welcome': typeof OnboardingWelcomeRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/display_filtered_entries'
    | '/configure-view'
    | '/custom_fields'
    | '/graphology'
    | '/graphs'
    | '/jupyter'
    | '/pivot-derived-page'
    | '/pivottable'
    | '/settings'
    | '/api_import'
    | '/legacy_import'
    | '/welcome'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/display_filtered_entries'
    | '/configure-view'
    | '/custom_fields'
    | '/graphology'
    | '/graphs'
    | '/jupyter'
    | '/pivot-derived-page'
    | '/pivottable'
    | '/settings'
    | '/api_import'
    | '/legacy_import'
    | '/welcome'
  id:
    | '__root__'
    | '/'
    | '/_navbar'
    | '/display_filtered_entries'
    | '/_navbar/configure-view'
    | '/_navbar/custom_fields'
    | '/_navbar/graphology'
    | '/_navbar/graphs'
    | '/_navbar/jupyter'
    | '/_navbar/pivot-derived-page'
    | '/_navbar/pivottable'
    | '/_navbar/settings'
    | '/_onboarding/api_import'
    | '/_onboarding/legacy_import'
    | '/_onboarding/welcome'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  NavbarRoute: typeof NavbarRouteWithChildren
  DisplayfilteredentriesRoute: typeof DisplayfilteredentriesRoute
  OnboardingApiimportRoute: typeof OnboardingApiimportRoute
  OnboardingLegacyimportRoute: typeof OnboardingLegacyimportRoute
  OnboardingWelcomeRoute: typeof OnboardingWelcomeRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  NavbarRoute: NavbarRouteWithChildren,
  DisplayfilteredentriesRoute: DisplayfilteredentriesRoute,
  OnboardingApiimportRoute: OnboardingApiimportRoute,
  OnboardingLegacyimportRoute: OnboardingLegacyimportRoute,
  OnboardingWelcomeRoute: OnboardingWelcomeRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_navbar",
        "/display_filtered_entries",
        "/_onboarding/api_import",
        "/_onboarding/legacy_import",
        "/_onboarding/welcome"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_navbar": {
      "filePath": "_navbar.tsx",
      "children": [
        "/_navbar/configure-view",
        "/_navbar/custom_fields",
        "/_navbar/graphology",
        "/_navbar/graphs",
        "/_navbar/jupyter",
        "/_navbar/pivot-derived-page",
        "/_navbar/pivottable",
        "/_navbar/settings"
      ]
    },
    "/display_filtered_entries": {
      "filePath": "display_filtered_entries.tsx"
    },
    "/_navbar/configure-view": {
      "filePath": "_navbar/configure-view.tsx",
      "parent": "/_navbar"
    },
    "/_navbar/custom_fields": {
      "filePath": "_navbar/custom_fields.tsx",
      "parent": "/_navbar"
    },
    "/_navbar/graphology": {
      "filePath": "_navbar/graphology.tsx",
      "parent": "/_navbar"
    },
    "/_navbar/graphs": {
      "filePath": "_navbar/graphs.tsx",
      "parent": "/_navbar"
    },
    "/_navbar/jupyter": {
      "filePath": "_navbar/jupyter.tsx",
      "parent": "/_navbar"
    },
    "/_navbar/pivot-derived-page": {
      "filePath": "_navbar/pivot-derived-page.tsx",
      "parent": "/_navbar"
    },
    "/_navbar/pivottable": {
      "filePath": "_navbar/pivottable.tsx",
      "parent": "/_navbar"
    },
    "/_navbar/settings": {
      "filePath": "_navbar/settings.tsx",
      "parent": "/_navbar"
    },
    "/_onboarding/api_import": {
      "filePath": "_onboarding/api_import.tsx"
    },
    "/_onboarding/legacy_import": {
      "filePath": "_onboarding/legacy_import.tsx"
    },
    "/_onboarding/welcome": {
      "filePath": "_onboarding/welcome.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
